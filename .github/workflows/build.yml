name: Build & Publish (versioned)

on:
  push:
    branches: [ main ]
    paths:
      - "package.json"
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag to publish (e.g. 0.4.2). If omitted, uses package.json"
        required: false
        type: string

permissions:
  contents: read
  packages: write

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  PUBLISH_LATEST_ON_MAIN: "true"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve version
        id: ver
        shell: bash
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            VER="${{ github.event.inputs.version }}"
          else
            VER="$(node -p "require('./package.json').version")"
          fi
          # No leading "v" allowed
          VER="${VER#v}"
          if [[ ! "$VER" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[A-Za-z0-9\.-]+)?$ ]]; then
            echo "Invalid semver: $VER"
            exit 1
          fi
          echo "version=$VER" >> $GITHUB_OUTPUT
          echo "tag=$VER" >> $GITHUB_OUTPUT

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.ver.outputs.tag }}
            type=raw,value=latest,enable=${{ env.PUBLISH_LATEST_ON_MAIN == 'true' && github.ref == 'refs/heads/main' }}
          labels: |
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.version=${{ steps.ver.outputs.tag }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_VERSION=${{ steps.ver.outputs.version }}
